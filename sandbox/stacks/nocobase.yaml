## Criando a stack nocobase.yaml
cat > nocobase${1:+_$1}.yaml <<EOL
version: "3.7"
services:

## --------------------------- ORION --------------------------- ##

  nocobase${1:+_$1}:
    image: nocobase/nocobase:latest ## Versão do Nocobase

    volumes:
      - nocobase${1:+_$1}_storage:/app/nocobase/storage

    networks:
      - $nome_rede_interna ## Nome da rede interna

    environment:
      ## Dados de acesso
      - INIT_ROOT_EMAIL=$mail_nocobase
      - INIT_ROOT_PASSWORD=$pass_nocobase
      - INIT_ROOT_NICKNAME=$user_nocobase
      - INIT_ROOT_USERNAME=$user_nocobase

      ## Dados do Postgres
      - DB_DIALECT=postgres
      - DB_HOST=postgres
      - DB_DATABASE=nocobase${1:+_$1}
      - DB_USER=postgres
      - DB_PASSWORD=$senha_postgres

      ## Paths de URL
      - LOCAL_STORAGE_BASE_URL=/storage/uploads
      - API_BASE_PATH=/api/

      ## Encryption Key
      - APP_KEY=$nocobase_key
      - ENCRYPTION_FIELD_KEY=$nocobase_encryption

    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          cpus: "1"
          memory: 1024M
      labels:
        - traefik.enable=true
        - traefik.http.routers.nocobase${1:+_$1}.rule=Host(\`$url_nocobase\`) ## Url da aplicação
        - traefik.http.services.nocobase${1:+_$1}.loadbalancer.server.port=80
        - traefik.http.routers.nocobase${1:+_$1}.service=nocobase${1:+_$1}
        - traefik.http.routers.nocobase${1:+_$1}.tls.certresolver=letsencryptresolver
        - traefik.http.routers.nocobase${1:+_$1}.entrypoints=websecure
        - traefik.http.routers.nocobase${1:+_$1}.tls=true

## --------------------------- ORION --------------------------- ##

volumes:
  nocobase${1:+_$1}_storage:
    external: true

networks:
  $nome_rede_interna: ## Nome da rede interna
    name: $nome_rede_interna ## Nome da rede interna
    external: true
EOL