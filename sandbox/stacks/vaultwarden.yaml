## Criando a stack vaultwarden.yaml
cat > vaultwarden${1:+_$1}.yaml <<-EOF
version: "3.7"
services:

## --------------------------- ORION --------------------------- ##

  vaultwarden${1:+_$1}:
    image: vaultwarden/server:latest

    volumes:
      - vaultwarden${1:+_$1}_data:/data

    networks:
      - $nome_rede_interna

    #ports:
    #  - 1973:80

    environment:
      ## Dominio do Dashboard
      - DOMAIN=https://$url_vaultwarden

      ## Permitir novos registros
      - SIGNUPS_ALLOWED=true

      ## Dados do SMTP
      - SMTP_FROM=$email_vaultwarden
      - SMTP_USERNAME=$email_vaultwarden
      - SMTP_PASSWORD=$senha_vaultwarden
      - SMTP_HOST=$host_vaultwarden
      - SMTP_PORT=$porta_vaultwarden
      - SMTP_SECURITY=$ssl_vaultwarden

      ## Configuração do Websocket
      - WEBSOCKET_ENABLED=true

    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
        - node.role == manager
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.vaultwarden${1:+_$1}.rule=Host(\`$url_vaultwarden\`)"
        - "traefik.http.routers.vaultwarden${1:+_$1}.service=vaultwarden${1:+_$1}"
        - "traefik.http.routers.vaultwarden${1:+_$1}.entrypoints=websecure"
        - "traefik.http.services.vaultwarden${1:+_$1}.loadbalancer.server.port=80"
        - "traefik.http.routers.vaultwarden${1:+_$1}.tls=true"
        - "traefik.http.routers.vaultwarden${1:+_$1}.tls.certresolver=letsencryptresolver"
        - "traefik.http.services.vaultwarden${1:+_$1}.loadbalancer.passhostheader=true"
        - "traefik.http.routers.vaultwarden${1:+_$1}.middlewares=compresstraefik"
        - "traefik.http.middlewares.compresstraefik.compress=true"
        - "traefik.docker.network=$nome_rede_interna"

## --------------------------- ORION --------------------------- ##

volumes:
  vaultwarden${1:+_$1}_data:
    external: true
    name: vaultwarden${1:+_$1}_data

networks:
  $nome_rede_interna:
    external: true
    name: $nome_rede_interna
EOF