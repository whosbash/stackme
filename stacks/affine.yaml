version: "3.7"
services:
  affine:
    image: ghcr.io/toeverything/affine-graphql:stable-39476d1
    command:
      ['sh', '-c', 'node ./scripts/self-host-predeploy && node ./dist/index.js']

    volumes:
      - affine_config:/root/.affine/config:rw
      - affine_storage:/root/.affine/storage:rw

    networks:
    - {{network_name}}

    #ports:
    #  - 3010:3010
    #  - 5555:5555

    logging:
      driver: 'json-file'
      options:
        max-size: '1000m'
    restart: on-failure:5

    environment:
      ## Affine
      - AFFINE_ADMIN_EMAIL={{affine_email}}
      - AFFINE_ADMIN_PASSWORD={{affine_password}}
      - AFFINE_SERVER_HOST={{affine_url}}
      - AFFINE_CONFIG_PATH=/root/.affine/config

      ## SMTP
      - MAILER_USER={{affine_smtp_email}}
      - MAILER_PASSWORD={{affine_smtp_password}}
      - MAILER_HOST={{affine_smtp_host}}
      - MAILER_PORT={{affine_smtp_port}}

      ## Postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD={{postgres_password}}
      - POSTGRES_DB=affine
      - DATABASE_URL=postgres://postgres:{{postgres_password}}@postgres:5432/affine?sslmode=disable
      - PGDATA=/var/lib/postgresql/data/pgdata

      ## Redis
      - REDIS_SERVER_HOST=redis
      
      # Node
      - NODE_ENV=production
      - NODE_OPTIONS="--import=./scripts/register.js"
      
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      labels:
        - traefik.enable=true
        - traefik.http.routers.affine.rule=Host(`{{affine_url}}`)
        - traefik.http.services.affine.loadbalancer.server.port=3010
        - traefik.http.routers.affine.service=affine
        - traefik.http.routers.affine.tls.certresolver=letsencryptresolver
        - traefik.http.routers.affine.entrypoints=websecure
        - traefik.http.routers.affine.tls=true
        - traefik.frontend.headers.STSPreload=true
        - traefik.frontend.headers.STSSeconds=31536000

volumes:
  affine_config:
    external: true
    name: affine_config
  affine_storage:
    external: true
    name: affine_storage

networks:
  {{network_name}}:
    external: true
    name: {{network_name}}
